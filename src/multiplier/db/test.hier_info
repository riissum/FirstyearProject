|test
CLK => mult_cell:leftMostCell.clk
CLK => mult_cell:secondCell.clk
CLK => listb:BFF0.clk
CLK => shift_register:RES0.clk
A[0] => mult_cell:secondCell.a2
A[1] => mult_cell:secondCell.a1
A[2] => mult_cell:leftMostCell.a2
A[3] => mult_cell:leftMostCell.a1
B[0] => listb:BFF0.L[0]
B[1] => listb:BFF0.L[1]
B[2] => listb:BFF0.L[2]
B[3] => listb:BFF0.L[3]
result[0] <= shift_register:RES0.res[0]
result[1] <= shift_register:RES0.res[1]
result[2] <= shift_register:RES0.res[2]
result[3] <= shift_register:RES0.res[3]
result[4] <= shift_register:RES0.res[4]
result[5] <= shift_register:RES0.res[5]
result[6] <= shift_register:RES0.res[6]
result[7] <= shift_register:RES0.res[7]


|test|mult_cell:leftMostCell
a1 => nLeft.IN1
a2 => nRight.IN0
bIn => nRight.IN1
bIn => dflipflop:flipflopB.d
bff <> bff
sIn => fulladder:fullAdder1.b
sOut <= dflipflop:flipflopS.q
clk => dflipflop:flipflopB.clk
clk => dflipflop:flipflopC1.clk
clk => dflipflop:flipflopC2.clk
clk => dflipflop:flipflopS.clk


|test|mult_cell:leftMostCell|dflipflop:flipflopB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|dflipflop:flipflopC1
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|dflipflop:flipflopC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|dflipflop:flipflopS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|fullAdder:fullAdder1
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:leftMostCell|fullAdder:fullAdder2
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell
a1 => nLeft.IN1
a2 => nRight.IN0
bIn => nRight.IN1
bIn => dflipflop:flipflopB.d
bff <> bff
sIn => fulladder:fullAdder1.b
sOut <= dflipflop:flipflopS.q
clk => dflipflop:flipflopB.clk
clk => dflipflop:flipflopC1.clk
clk => dflipflop:flipflopC2.clk
clk => dflipflop:flipflopS.clk


|test|mult_cell:secondCell|dflipflop:flipflopB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|dflipflop:flipflopC1
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|dflipflop:flipflopC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|dflipflop:flipflopS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|fullAdder:fullAdder1
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|mult_cell:secondCell|fullAdder:fullAdder2
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|ListB:BFF0
L[0] => Mux0.IN3
L[1] => Mux0.IN2
L[2] => Mux0.IN1
L[3] => Mux0.IN0
bOut <= bOut~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK
clk => bOut~reg0.CLK


|test|shift_register:RES0
d => dflipflop:flip0.d
clk => dflipflop:flip0.clk
clk => dflipflop:floop:6:FFi.clk
clk => dflipflop:floop:5:FFi.clk
clk => dflipflop:floop:4:FFi.clk
clk => dflipflop:floop:3:FFi.clk
clk => dflipflop:floop:2:FFi.clk
clk => dflipflop:floop:1:FFi.clk
clk => dflipflop:floop:0:FFi.clk
res[0] <= dflipflop:floop:0:FFi.q
res[1] <= dflipflop:floop:1:FFi.q
res[2] <= dflipflop:floop:2:FFi.q
res[3] <= dflipflop:floop:3:FFi.q
res[4] <= dflipflop:floop:4:FFi.q
res[5] <= dflipflop:floop:5:FFi.q
res[6] <= dflipflop:floop:6:FFi.q
res[7] <= dflipflop:flip0.q


|test|shift_register:RES0|dflipflop:flip0
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:6:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:5:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:4:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:3:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:2:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:1:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:0:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


