|test
CLK => controlclk:cntlr.CLK
RES[0] <= shift_register:RES0.res[0]
RES[1] <= shift_register:RES0.res[1]
RES[2] <= shift_register:RES0.res[2]
RES[3] <= shift_register:RES0.res[3]
RES[4] <= shift_register:RES0.res[4]
RES[5] <= shift_register:RES0.res[5]
RES[6] <= shift_register:RES0.res[6]
RES[7] <= shift_register:RES0.res[7]
bMoni <= listb:BFF0.bOut
rMoni <= listr:R0.TT
H0[0] <= hexdisp:HE0.HEX[0]
H0[1] <= hexdisp:HE0.HEX[1]
H0[2] <= hexdisp:HE0.HEX[2]
H0[3] <= hexdisp:HE0.HEX[3]
H0[4] <= hexdisp:HE0.HEX[4]
H0[5] <= hexdisp:HE0.HEX[5]
H0[6] <= hexdisp:HE0.HEX[6]
H1[0] <= hexdisp:HE1.HEX[0]
H1[1] <= hexdisp:HE1.HEX[1]
H1[2] <= hexdisp:HE1.HEX[2]
H1[3] <= hexdisp:HE1.HEX[3]
H1[4] <= hexdisp:HE1.HEX[4]
H1[5] <= hexdisp:HE1.HEX[5]
H1[6] <= hexdisp:HE1.HEX[6]
H2[0] <= hexdisp:HE2.HEX[0]
H2[1] <= hexdisp:HE2.HEX[1]
H2[2] <= hexdisp:HE2.HEX[2]
H2[3] <= hexdisp:HE2.HEX[3]
H2[4] <= hexdisp:HE2.HEX[4]
H2[5] <= hexdisp:HE2.HEX[5]
H2[6] <= hexdisp:HE2.HEX[6]
H3[0] <= hexdisp:HE3.HEX[0]
H3[1] <= hexdisp:HE3.HEX[1]
H3[2] <= hexdisp:HE3.HEX[2]
H3[3] <= hexdisp:HE3.HEX[3]
H3[4] <= hexdisp:HE3.HEX[4]
H3[5] <= hexdisp:HE3.HEX[5]
H3[6] <= hexdisp:HE3.HEX[6]
H4[0] <= hexdisp:HE4.HEX[0]
H4[1] <= hexdisp:HE4.HEX[1]
H4[2] <= hexdisp:HE4.HEX[2]
H4[3] <= hexdisp:HE4.HEX[3]
H4[4] <= hexdisp:HE4.HEX[4]
H4[5] <= hexdisp:HE4.HEX[5]
H4[6] <= hexdisp:HE4.HEX[6]
H5[0] <= hexdisp:HE5.HEX[0]
H5[1] <= hexdisp:HE5.HEX[1]
H5[2] <= hexdisp:HE5.HEX[2]
H5[3] <= hexdisp:HE5.HEX[3]
H5[4] <= hexdisp:HE5.HEX[4]
H5[5] <= hexdisp:HE5.HEX[5]
H5[6] <= hexdisp:HE5.HEX[6]
H6[0] <= hexdisp:HE6.HEX[0]
H6[1] <= hexdisp:HE6.HEX[1]
H6[2] <= hexdisp:HE6.HEX[2]
H6[3] <= hexdisp:HE6.HEX[3]
H6[4] <= hexdisp:HE6.HEX[4]
H6[5] <= hexdisp:HE6.HEX[5]
H6[6] <= hexdisp:HE6.HEX[6]
H7[0] <= hexdisp:HE7.HEX[0]
H7[1] <= hexdisp:HE7.HEX[1]
H7[2] <= hexdisp:HE7.HEX[2]
H7[3] <= hexdisp:HE7.HEX[3]
H7[4] <= hexdisp:HE7.HEX[4]
H7[5] <= hexdisp:HE7.HEX[5]
H7[6] <= hexdisp:HE7.HEX[6]


|test|controlClk:cntlr
CLK => CLKf.DATAA
CLK => i[0].CLK
CLK => i[1].CLK
CLK => i[2].CLK
CLK => i[3].CLK
CLK => i[4].CLK
CLK => i[5].CLK
CLK => i[6].CLK
CLK => i[7].CLK
CLK => i[8].CLK
CLK => i[9].CLK
CLK => i[10].CLK
CLK => i[11].CLK
CLK => i[12].CLK
CLK => i[13].CLK
CLK => i[14].CLK
CLK => i[15].CLK
CLK => i[16].CLK
CLK => i[17].CLK
CLK => i[18].CLK
CLK => i[19].CLK
CLK => i[20].CLK
CLK => i[21].CLK
CLK => i[22].CLK
CLK => i[23].CLK
CLK => i[24].CLK
CLK => i[25].CLK
CLK => i[26].CLK
CLK => i[27].CLK
CLK => i[28].CLK
CLK => i[29].CLK
CLK => i[30].CLK
CLK => i[31].CLK
CLKf <= CLKf.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell
a1 => n[0].IN1
a2 => n[1].IN0
m1 => n[2].IN1
m2 => n[3].IN0
b => n[1].IN1
b => dflipflop:flipB.d
bff <> bff
q => n[3].IN1
q => dflipflop:flipQ.d
qff <> qff
clk => dflipflop:flipS.clk
clk => dflipflop:flipC1T.clk
clk => dflipflop:flipC1B.clk
clk => dflipflop:flipC2.clk
clk => dflipflop:flipB.clk
clk => dflipflop:flipQ.clk
s => fulladder:add2.b
sOut <= dflipflop:flipS.q


|test|modMultCell:stCell|fullAdder:add1
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|fullAdder:add2
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|fullAdder:add3
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|fullAdder:add4
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|dflipflop:flipS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|dflipflop:flipC1T
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|dflipflop:flipC1B
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|dflipflop:flipC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|dflipflop:flipB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:stCell|dflipflop:flipQ
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell
a1 => n[0].IN1
a2 => n[1].IN0
m1 => n[2].IN1
m2 => n[3].IN0
b => n[1].IN1
b => dflipflop:flipB.d
bff <> bff
q => n[3].IN1
q => dflipflop:flipQ.d
qff <> qff
clk => dflipflop:flipS.clk
clk => dflipflop:flipC1T.clk
clk => dflipflop:flipC1B.clk
clk => dflipflop:flipC2.clk
clk => dflipflop:flipB.clk
clk => dflipflop:flipQ.clk
s => fulladder:add2.b
sOut <= dflipflop:flipS.q


|test|modMultCell:ndCell|fullAdder:add1
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|fullAdder:add2
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|fullAdder:add3
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|fullAdder:add4
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|dflipflop:flipS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|dflipflop:flipC1T
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|dflipflop:flipC1B
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|dflipflop:flipC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|dflipflop:flipB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:ndCell|dflipflop:flipQ
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell
a1 => n[0].IN1
a2 => n[1].IN0
m1 => n[2].IN1
m2 => n[3].IN0
b => n[1].IN1
b => dflipflop:flipB.d
bff <> bff
q => n[3].IN1
q => dflipflop:flipQ.d
qff <> qff
clk => dflipflop:flipS.clk
clk => dflipflop:flipC1T.clk
clk => dflipflop:flipC1B.clk
clk => dflipflop:flipC2.clk
clk => dflipflop:flipB.clk
clk => dflipflop:flipQ.clk
s => fulladder:add2.b
sOut <= dflipflop:flipS.q


|test|modMultCell:rdCell|fullAdder:add1
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|fullAdder:add2
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|fullAdder:add3
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|fullAdder:add4
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|dflipflop:flipS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|dflipflop:flipC1T
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|dflipflop:flipC1B
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|dflipflop:flipC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|dflipflop:flipB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:rdCell|dflipflop:flipQ
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell
a1 => n[0].IN1
a2 => n[1].IN0
m1 => n[2].IN1
m2 => n[3].IN0
b => n[1].IN1
b => dflipflop:flipB.d
bff <> bff
q => n[3].IN1
q => dflipflop:flipQ.d
qff <> qff
clk => dflipflop:flipS.clk
clk => dflipflop:flipC1T.clk
clk => dflipflop:flipC1B.clk
clk => dflipflop:flipC2.clk
clk => dflipflop:flipB.clk
clk => dflipflop:flipQ.clk
s => fulladder:add2.b
sOut <= dflipflop:flipS.q


|test|modMultCell:thCell|fullAdder:add1
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|fullAdder:add2
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|fullAdder:add3
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|fullAdder:add4
a => s.IN0
a => cOut.IN0
b => s.IN1
b => cOut.IN1
cIn => s.IN1
cIn => cOut.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cOut <= cOut.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|dflipflop:flipS
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|dflipflop:flipC1T
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|dflipflop:flipC1B
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|dflipflop:flipC2
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|dflipflop:flipB
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|modMultCell:thCell|dflipflop:flipQ
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|ListB:BFF0
L[0] => Mux0.IN7
L[1] => Mux0.IN6
L[2] => Mux0.IN5
L[3] => Mux0.IN4
L[4] => Mux0.IN3
L[5] => Mux0.IN2
L[6] => Mux0.IN1
L[7] => Mux0.IN0
bOut <= bOut.DB_MAX_OUTPUT_PORT_TYPE
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|ListQ:QFF0
d => qOut.DATAB
qOut <= qOut.DB_MAX_OUTPUT_PORT_TYPE
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|ListR:R0
S => sOut.DATAB
S => sOut.DATAB
sOut <= sOut.DB_MAX_OUTPUT_PORT_TYPE
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK
TT <= TT.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0
d => dflipflop:flip0.d
clk => dflipflop:flip0.clk
clk => dflipflop:floop:6:FFi.clk
clk => dflipflop:floop:5:FFi.clk
clk => dflipflop:floop:4:FFi.clk
clk => dflipflop:floop:3:FFi.clk
clk => dflipflop:floop:2:FFi.clk
clk => dflipflop:floop:1:FFi.clk
clk => dflipflop:floop:0:FFi.clk
res[0] <= dflipflop:floop:0:FFi.q
res[1] <= dflipflop:floop:1:FFi.q
res[2] <= dflipflop:floop:2:FFi.q
res[3] <= dflipflop:floop:3:FFi.q
res[4] <= dflipflop:floop:4:FFi.q
res[5] <= dflipflop:floop:5:FFi.q
res[6] <= dflipflop:floop:6:FFi.q
res[7] <= dflipflop:flip0.q


|test|shift_register:RES0|dflipflop:flip0
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:6:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:5:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:4:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:3:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:2:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:1:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|shift_register:RES0|dflipflop:\floop:0:FFi
d => q~reg0.DATAIN
clk => q~reg0.CLK
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|test|hexDisp:HE0
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|hexDisp:HE1
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|hexDisp:HE2
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|hexDisp:HE3
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|hexDisp:HE4
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|hexDisp:HE5
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|hexDisp:HE6
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


|test|hexDisp:HE7
N => HEX[0]$latch.DATAIN
N => HEX[3]$latch.DATAIN
N => HEX[4]$latch.DATAIN
N => HEX[5]$latch.DATAIN
HEX[0] <= HEX[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[1] <= <GND>
HEX[2] <= <GND>
HEX[3] <= HEX[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[4] <= HEX[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[5] <= HEX[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX[6] <= <VCC>
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => i[31].CLK


